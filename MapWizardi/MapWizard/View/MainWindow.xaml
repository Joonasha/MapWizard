<mah:MetroWindow
     x:Class="MapWizard.MainWindow"
        x:Name="MapWizardMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Views="clr-namespace:MapWizard.View"
        xmlns:service="clr-namespace:MapWizard.Service"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        mc:Ignorable="d"
        Title="Map Wizard 1.0.2" Height="768" Width="1024"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}" 
        GlowBrush="{DynamicResource AccentColorBrush}"
        TitleCaps="False"
        ResizeMode="CanResizeWithGrip" 
        FontSize="14">
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button x:Name="button" Click="Button_Click">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock FontFamily="Font Awesome 5 Free Regular" FontSize="16" Text=" " Grid.Column="0"></TextBlock>
                    <TextBlock Grid.Column="1">Settings</TextBlock>
                </Grid>
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <Window.Resources>
        <service:ToolStatusColorConverter x:Key="ToolStatusColorConverter" />
        <service:ToolStatusToStringConverter x:Key="ToolStatusToStringConverter" />
        <service:ToolStatusSymbolConverter x:Key="ToolStatusSymbolConverter"/>
        <service:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Style x:Key="LargeTileStyle" TargetType="mah:Tile">
            <Setter Property="Width" Value="300" />
            <Setter Property="Height" Value="125" />
            <Setter Property="TitleFontSize" Value="18" />
        </Style>
        <Style x:Key="SmallTileStyle" TargetType="mah:Tile">
            <Setter Property="Width" Value="147" />
            <Setter Property="Height" Value="125" />
            <Setter Property="TitleFontSize" Value="18" />
        </Style>
        <Style x:Key="AutoTileStyle" TargetType="mah:Tile">
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="TitleFontSize" Value="18" />
        </Style>
        <DataTemplate x:Key="DescriptiveContent">
            <StackPanel DataContext="{Binding Source={StaticResource Locator}, Path=DescriptiveViewModel}">
                <TextBlock Margin="0,-20,0,40"  FontSize="22" FontWeight="Bold"  Text="Choose Model" />
                <ComboBox Name="cmbx"                 ItemsSource="{Binding Path =ModelNames}"                                                      
                                                      FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                                      SelectedIndex="{Binding SelectedModelIndex, Mode=TwoWay}"
                                                      ToolTip="Choose the model from a drop-down list">
                </ComboBox>
                <WrapPanel ToolTip="Select whether to save the model permanently for use in other assessment projects.">
                    <CheckBox Name="YesButton" DataContext="{Binding Source={StaticResource Locator}, Path=DescriptiveViewModel}" IsChecked="{Binding SaveToDepositModels}" Margin="10,20,5,10"></CheckBox>
                    <TextBlock Text="Save model for further use?" Margin="0,20,10,10"></TextBlock>

                </WrapPanel>
                <UniformGrid Margin="0,5,0,20" IsEnabled="{Binding ElementName=YesButton, Path=IsChecked}" Visibility="{Binding ElementName=YesButton, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBox mah:TextBoxHelper.Watermark="Type model name" DataContext="{Binding Source={StaticResource Locator}, Path=DescriptiveViewModel}" Text="{Binding DepositModelsExtension}" MinWidth="120"></TextBox>
                </UniformGrid>

                <UniformGrid Margin="0,5,0,20"  IsEnabled="{Binding ElementName=YesButton, Path=IsChecked}" Visibility="{Binding ElementName=YesButton, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Foreground="Red" Text="Please insert model name." DataContext="{Binding Source={StaticResource Locator}, Path=DescriptiveViewModel}" Visibility="{Binding NoFolderNameGiven, Converter={StaticResource BoolToVisibilityConverter}}"></TextBlock>
                </UniformGrid>
                <Button  Width="180" HorizontalAlignment="Left" Style="{StaticResource AccentedSquareButtonStyle}" DataContext="{Binding Source={StaticResource Locator}, Path=DescriptiveViewModel}" Command="{Binding SelectModelCommand}" ToolTip="Confirm the selection of the model">
                    <TextBlock>Confirm selection</TextBlock>
                </Button>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="GradeTonnageContent">
            <StackPanel DataContext="{Binding Source={StaticResource Locator}, Path=GradeTonnageViewModel}">
                <TextBlock Margin="0,-20,0,40"  FontSize="22" FontWeight="Bold"  Text="Choose Model" />
                <ComboBox Name="cmbx"                 ItemsSource="{Binding Path =ModelNames}"                                                      
                                                      FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                                      SelectedIndex="{Binding SelectedModelIndex, Mode=TwoWay}"
                                                      ToolTip="Choose the model to be used in this assessment from a drop-down list">
                </ComboBox>
                <WrapPanel>
                    <CheckBox Name="YesButton" DataContext="{Binding Source={StaticResource Locator}, Path=GradeTonnageViewModel}" IsChecked="{Binding SaveToDepositModels}" Margin="10,20,5,10"></CheckBox>
                    <TextBlock Text="Save model for further use?" Margin="0,20,10,10" ToolTip="Select whether to save the model permanently for use in other assessment projects."></TextBlock>

                </WrapPanel>
                <UniformGrid Margin="0,5,0,20" IsEnabled="{Binding ElementName=YesButton, Path=IsChecked}" Visibility="{Binding ElementName=YesButton, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBox mah:TextBoxHelper.Watermark="Type model name" DataContext="{Binding Source={StaticResource Locator}, Path=GradeTonnageViewModel}" Text="{Binding DepositModelsExtension}" MinWidth="120"></TextBox>
                </UniformGrid>

                <UniformGrid Margin="0,5,0,20"  IsEnabled="{Binding ElementName=YesButton, Path=IsChecked}" Visibility="{Binding ElementName=YesButton, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Foreground="Red" Text="Please insert model name." DataContext="{Binding Source={StaticResource Locator}, Path=GradeTonnageViewModel}" Visibility="{Binding NoFolderNameGiven, Converter={StaticResource BoolToVisibilityConverter}}"></TextBlock>
                </UniformGrid>
                <Button  Width="180" HorizontalAlignment="Left" Style="{StaticResource AccentedSquareButtonStyle}" DataContext="{Binding Source={StaticResource Locator}, Path=GradeTonnageViewModel}" Command="{Binding SelectModelCommand}">
                    <TextBlock ToolTip="Confirm the selection of the model">Confirm selection</TextBlock>
                </Button>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="EconomicFilterContent(RAEF)">
            <StackPanel DataContext="{Binding Source={StaticResource Locator}, Path=EconomicFilterViewModel}">
                <TextBlock Margin="0,-20,0,40"  FontSize="22" FontWeight="Bold"  Text="Choose Result" />
                <ComboBox Name="cmbx"                 
                          ItemsSource="{Binding Path = RaefModelNames}"  
                          Margin="0,20,0,0"
                          FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Mode=Self}}"
                          SelectedIndex="{Binding RaefSelectedModelIndex, Mode=TwoWay}">
                </ComboBox>
                <Button Margin="0,40,0,0" Width="180" HorizontalAlignment="Left" Style="{StaticResource AccentedSquareButtonStyle}" DataContext="{Binding Source={StaticResource Locator}, Path=EconomicFilterViewModel}" Command="{Binding RaefSelectModelCommand}" ToolTip="Select the RAEF result to be used">
                    <TextBlock>Confirm selection</TextBlock>
                </Button>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="EconomicFilterContent(Screener)">
            <StackPanel DataContext="{Binding Source={StaticResource Locator}, Path=EconomicFilterViewModel}">
                <TextBlock Margin="0,-20,0,40"  FontSize="22" FontWeight="Bold"  Text="Choose Result" />
                <ComboBox Name="cmbx"                 
                          ItemsSource="{Binding Path = ScreenerModelNames}"  
                          Margin="0,20,0,0"
                          FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Mode=Self}}"
                          SelectedIndex="{Binding ScreenerSelectedModelIndex, Mode=TwoWay}">
                </ComboBox>
                <Button Margin="0,40,0,0" Width="180" HorizontalAlignment="Left" Style="{StaticResource AccentedSquareButtonStyle}" DataContext="{Binding Source={StaticResource Locator}, Path=EconomicFilterViewModel}" Command="{Binding ScreenerSelectModelCommand}">
                    <TextBlock>Select Result</TextBlock>
                </Button>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="UndiscoveredDepositsContent">
            <StackPanel DataContext="{Binding Source={StaticResource Locator}, Path=UndiscoveredDepositsViewModel}">
                <TextBlock Margin="0,-20,0,40"  FontSize="22" FontWeight="Bold"  Text="Choose Result" />
                <ComboBox Name="cmbx"                 
                          ItemsSource="{Binding Path = ModelNames}"  
                          Margin="0,20,0,0"
                          FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Mode=Self}}"
                          SelectedIndex="{Binding SelectedModelIndex, Mode=TwoWay}" 
                          ToolTip="Choose the model to be used in this assessment from a drop-down list.">
                </ComboBox>
                <Button Margin="0,40,0,0" Width="180" HorizontalAlignment="Left" Style="{StaticResource AccentedSquareButtonStyle}" DataContext="{Binding Source={StaticResource Locator}, Path=UndiscoveredDepositsViewModel}" Command="{Binding SelectModelCommand}" ToolTip="Confirm the selection of the model.">
                    <TextBlock>Confirm selection</TextBlock>
                </Button>
            </StackPanel>
        </DataTemplate>
        <Style TargetType="{x:Type Dialog:MessageDialog}"
        x:Key="NewCustomDialogStyle"
        BasedOn="{StaticResource {x:Type Dialog:BaseMetroDialog}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Dialog:MessageDialog}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="DialogShownStoryboard">
                                <DoubleAnimation AccelerationRatio=".9"
                                            BeginTime="0:0:0"
                                            Duration="0:0:0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" />
                            </Storyboard>

                        </ControlTemplate.Resources>

                        <Grid Background="{TemplateBinding Background}">
                            <Border FocusVisualStyle="{x:Null}"
                            Focusable="False">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Grid.Row="0"
                                                Content="{TemplateBinding DialogTop}" />
                                    <Grid Grid.Row="1" DataContext="{Binding Source={StaticResource Locator}, Path=Main}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="10*" />
                                            <ColumnDefinition Width="80*" />
                                            <ColumnDefinition Width="10*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="1"
                                        Margin="0 10 0 0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <StackPanel DataContext="{Binding Source={StaticResource Locator}, Path=Main}">
                                                <TextBlock Grid.Row="0"
                                                FontSize="{DynamicResource DialogTitleFontSize}"
                                                Foreground="{TemplateBinding Foreground}"
                                                Text="{TemplateBinding Title}"
                                                TextWrapping="Wrap" />
                                                <ContentControl DataContext="{Binding Source={StaticResource Locator}, Path=Main}" Content="{Binding}">
                                                    <ContentControl.Style>
                                                        <Style TargetType="ContentControl">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding DialogContentSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="DescriptiveViewModel" >
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource DescriptiveContent}" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DialogContentSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="GradeTonnageViewModel" >
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource GradeTonnageContent}" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DialogContentSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="EconomicFilterViewModel(RAEF)" >
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource EconomicFilterContent(RAEF)}" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DialogContentSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="EconomicFilterViewModel(Screener)" >
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource EconomicFilterContent(Screener)}" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DialogContentSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="UndiscoveredDepositsViewModel" >
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource UndiscoveredDepositsContent}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ContentControl.Style>
                                                </ContentControl>
                                            </StackPanel>
                                            <ContentPresenter Grid.Row="1"
                                                        Content="{TemplateBinding Content}" />
                                        </Grid>
                                    </Grid>

                                    <ContentPresenter Grid.Row="2"
                                                Content="{TemplateBinding DialogBottom}" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" Value="Red" />
                                <Setter Property="BorderThickness" Value="100" />
                                <Setter Property="Background" Value="DarkCyan" />

                            </Trigger>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Storyboard="{StaticResource DialogShownStoryboard}" />
                                </EventTrigger.Actions>
                            </EventTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Dialog:MessageDialog}" BasedOn="{StaticResource NewCustomDialogStyle}" />
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="LimeGreen"></Setter>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Stroke="{DynamicResource FlatButtonForegroundBrush}"  StrokeThickness="1" StrokeDashArray="8 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}" />
    </Window.Resources>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl x:Name="flyoutscontrol">
            <mah:Flyout x:Name="settingsFlyout"  Header="Settings" Position="Right" Width="600" Theme="Dark" >
                <Views:SettingsView></Views:SettingsView>
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
    <ContentPresenter x:Name="MainArea" 
                      DataContext="{Binding Source={StaticResource Locator}, Path=Main}"  
                      Content="{Binding ActiveView, Mode=TwoWay}"/>
</mah:MetroWindow>
